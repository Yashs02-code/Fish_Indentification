{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SURAJ UBALE\\\\Downloads\\\\samudra-sahayak-fish-id-pure-python\\\\frontend\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CameraCapture from './components/CameraCapture';\nimport PredictionCard from './components/PredictionCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [history, setHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleImageCapture = async imageBlob => {\n    setLoading(true); // show spinner\n    const formData = new FormData();\n    formData.append('file', imageBlob, 'fish.jpg');\n    try {\n      const res = await fetch('http://127.0.0.1:8000/predict', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await res.json();\n      // Add new prediction to history\n      setHistory(prev => [{\n        image: URL.createObjectURL(imageBlob),\n        result: data\n      }, ...prev]);\n    } catch (err) {\n      console.error(\"Error:\", err);\n      alert(\"Failed to get fish prediction.\");\n    } finally {\n      setLoading(false); // hide spinner\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"\\uD83D\\uDC1F Fish ID App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CameraCapture, {\n      onImageCapture: handleImageCapture\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: \"Analyzing Image...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-container\",\n      children: [history.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-history\",\n        children: \"Capture a fish image to see results.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), history.map((item, index) => /*#__PURE__*/_jsxDEV(PredictionCard, {\n        image: item.image,\n        result: item.result\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NHoE5bLk2d1n3oxMTVdhxmhWbqk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CameraCapture","PredictionCard","jsxDEV","_jsxDEV","App","_s","history","setHistory","loading","setLoading","handleImageCapture","imageBlob","formData","FormData","append","res","fetch","method","body","data","json","prev","image","URL","createObjectURL","result","err","console","error","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onImageCapture","length","map","item","index","_c","$RefreshReg$"],"sources":["C:/Users/SURAJ UBALE/Downloads/samudra-sahayak-fish-id-pure-python/frontend/src/app.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport CameraCapture from './components/CameraCapture';\r\nimport PredictionCard from './components/PredictionCard';\r\n\r\nfunction App() {\r\n  const [history, setHistory] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleImageCapture = async (imageBlob) => {\r\n    setLoading(true); // show spinner\r\n    const formData = new FormData();\r\n    formData.append('file', imageBlob, 'fish.jpg');\r\n\r\n    try {\r\n      const res = await fetch('http://127.0.0.1:8000/predict', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      const data = await res.json();\r\n      // Add new prediction to history\r\n      setHistory((prev) => [\r\n        { image: URL.createObjectURL(imageBlob), result: data },\r\n        ...prev,\r\n      ]);\r\n    } catch (err) {\r\n      console.error(\"Error:\", err);\r\n      alert(\"Failed to get fish prediction.\");\r\n    } finally {\r\n      setLoading(false); // hide spinner\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1 className=\"app-title\">üêü Fish ID App</h1>\r\n      <CameraCapture onImageCapture={handleImageCapture} />\r\n      {loading && <div className=\"spinner\">Analyzing Image...</div>}\r\n\r\n      <div className=\"history-container\">\r\n        {history.length === 0 && !loading && (\r\n          <p className=\"no-history\">Capture a fish image to see results.</p>\r\n        )}\r\n        {history.map((item, index) => (\r\n          <PredictionCard\r\n            key={index}\r\n            image={item.image}\r\n            result={item.result}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}